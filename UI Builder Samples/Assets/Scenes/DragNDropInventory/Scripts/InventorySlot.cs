using UnityEngine.Scripting;
using UnityEngine.UIElements;

public class InventorySlot : VisualElement
{
    public Image iconImage;
    public string iconName = "";
  
    public InventorySlot()
    {
        //Create a new Image element and add it to the root
        iconImage = new Image();
        Add(iconImage);

        //Add CSS properties to the elements 
        iconImage.AddToClassList("slotIcon");
        AddToClassList("slotContainer");

        /* When the InventorySlot is first instantiated, it’ll create a new Image 
        element and add it as a child to the root. Next, it adds two new styles –
         slotContainer and slotIcon. These styles do not exist though, so now would be
          a good time to add them. Open the Inventory.uss stylesheet and add the following 
          classes to the end: */

          RegisterCallback<PointerDownEvent>(OnPointerDown);
    }

    private void OnPointerDown(PointerDownEvent evt)
{
    //Not the left mouse button
    if (evt.button != 0 || iconName.Equals(""))
    {
        return;
    }

    //Clear the image
    iconImage.image = null;

    //Start the drag
    InventoryUIController.StartDrag(evt.position, this);
}


    public void HoldItem(ItemDetails item)
    {
        iconImage.image = item.Icon.texture;
        iconName = item.GUID;
    }

    public void DropItem()
    {
        iconImage.image = null;
        iconName = "";
    }
    //This is used to have the uxml to this component. Look under the project/customcontrols
    //There will havev an element with the same name as the above. Put it in the same place
    //of the element generated by the for loop in the InventoryUIController. You must disable
    //the loop with you do like this.
#region UXML
[Preserve]
public new class UxmlFactory : UxmlFactory<InventorySlot, UxmlTraits> { }
[Preserve]
public new class UxmlTraits : VisualElement.UxmlTraits { }
#endregion
    
}

